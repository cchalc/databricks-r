name: custom r pipeline

on:
  workflow_dispatch:
    branches:
      - '**'
    tags-ignore:
      - 'v*' # this tag type is used for release pipelines

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: cchalc/databricks_r
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  setup:

    needs: docker
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install pip and databricks-cli
        run: |
          python -m pip install --upgrade pip
          pip install -U databricks-cli

          #      - name: Prepare profile
          #        run: |
          #          echo "[DEFAULT]" >> ~/.databrickscfg
          #          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          #          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      - 
        name: set up init script
        run: |
          databricks fs cp --overwrite ./scripts/custom_r_init.sh dbfs:/databricks/scripts/custom_r_init.sh --profile DEFAULT

      - 
        name: create cluster
        run: |
          databricks clusters create --json-file ./conf/custom_r.json
